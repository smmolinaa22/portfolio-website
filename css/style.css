header {
    background-color: hsl(180, 84%, 14%);
    /*text-align: center;*/
    padding: 10px 10px 4px;
    position: fixed;
    width: 100%;
    box-shadow: 0 5px 9px rgba(0, 0, 0, 0.3); 
    }

main {
    padding-top: 54px;
}

#about-page {
    padding-top: 120px;
    h4 {
        text-align:left;
    }
}

footer {
    padding-top: 30px;
    padding-bottom: 20px;
}

*{
    box-sizing: border-box;
}

body{
    background-color: #313030;
    font-family: 'Raleway', sans-serif;
    font-size: 16px;
    line-height: 1.6;
    color: #fbf9ea;
}

h1, h2, h3, h4 {
    font-family: 'Poppins', sans-serif;
    line-height: 1.4;
}

h1{
    font-size: 2.55em;
    font-weight: 700;
    color: #e3af5c;
    text-align: center;
}

h2{
    font-size: 2.25em;
    font-weight: 600;
    color: #fbf9ea;
    text-align: center;                                  
}

h3{
    font-size: 1.75em;
    font-weight: 500;
    color: #c5e1a2;
}

h4{
    font-size: 1.35em;
    font-weight: 400;
    color: #fbf9ea; /* #EB9F9F */
    text-align: center;
}

img {
    width: 100%;
    border-radius: 20px;
    display: inline-block;
}

a{ 
    color: #c5e1a2;
    text-decoration: none;
}

a:visited {
    color: #fbf9ea;
}

a:hover,
a:focus {
    color: #e3af5c;
    text-decoration: underline;
}

a:active { /* selected link */
    color: #eb9f9f; 
}

.button{ 
    display: inline-block;
    font-family: 'Poppins', sans-serif;
    background-color: #fbf9ea;
    color: #313030;
    font-weight: 400;
    font-size: 1.15em;
    text-decoration: none;
    padding: 20px;
    margin: 4px, 8px;
    border-radius: 12px;
    border-bottom: 2px solid #e3af5c;
    transition: 0.2s opacity; /*transition: property, duration, fiming-function, delay*/
}

.button:hover,
.button:visited {
    opacity: 0.8;
    color: #313030;
    text-decoration: none;
}

.button:active {
    opacity: .4;
    text-decoration: none;
}

.button.contact {
    background-color: #e3af5c;
    color: #313030;
    text-transform: uppercase;
    border-bottom: 2px solid #fbf9ea;
}

.button.contact:hover {
    opacity: 0.8;
}

.button.contact:active {
    opacity: .4;
}

/* Layout styling */

.container-1 {
    max-width: 1200px;
    padding: 12px;
    padding-bottom: 20px;
    border: 2px solid #fbf9ea;
    border-radius: 15px;
    margin: auto;
    margin-top: 10px;
    margin-bottom: 10px;
    width: 92%;
    box-sizing: border-box;
    /* margin: 0 ; */
}

.container-2 {
    padding: 20px 0 0;
    display: inline-block;
    width: 100%;
    box-sizing: border-box;
}

#ad_astra_project span {
    display: block;
    h1 {
        font-size: 1.00 em;
    }
    text-align: center;
}

.box.box-1 {
    margin: 0 auto;
}

.row{
    margin: 25px 0;
}

#work .row, #about .row, #waves .row, #final .row, #adastra .row {
    padding-bottom:25px; border-bottom: 1px solid #4a4a4a;
}

#work {
    text-align: center;
}

#hero {
    padding: 20px 0 0;
    display: inline-block;
    width: 100%;
    text-align:center;
}

.center {
    text-align: center;
}

.profile {
    display: block;
    margin-left: auto;
    margin-right: auto;
    max-width: 250px;
}


nav > ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}



nav > ul > li > a { 
    padding: 0 15px;
    text-transform: uppercase;
    font-weight: 700;
    color: #fbf9ea;
}

nav > ul > li > a:hover,
nav > ul > li > a:focus {
    color:#e3af5c;
    text-decoration: underline;
}

.navtoggle.responsive nav {
    padding: 24px 0 0;
}

.navtoggle li .icon {
    position: absolute;
    right: 0;
    top: 2px;
    font-size: 20px;
    padding-right: 0;*/
}

.navtoggle li:not(:last-child) {
    display: none;
}

.navtoggle, .navtoggle.responsive {
    position: relative;
}

.navtoggle.responsive li {
    display: block;
    padding: 10px 0;
    border-top: 1px solid; 
    border-color: #fbf9ea;
}

.navtoggle.responsive li:last-child {
    padding: 0 0 10px;
}

/*how do I make a_ hover or focus show in the nav? NOT visited*/
/*putting .nav info in different order changes what appears*/

svg {
    display: inline-block;
    width: 100%;
    max-width: 15%;
    height: auto; 
}

.smlogo {
    width: 100%;
    max-width: 150px; /*25%*/
    height: auto;
}

footer {
    background-color: #1A1919;
    text-align: center;
}

@media only screen and (min-width: 641px) { /* medium devices 640px and larger) */
    .smlogo {
        max-width: 25%;
    }
    
    header {
        text-align: unset; /* unset: rests property to initial (original) value*/
        padding: 20px 20px 13px 20px;
    }

    nav {
        width: auto;
        float: right;
        margin-top: 0;
    }

    nav > ul {
        margin: 1em 0;
    }

    nav > ul > li {
        display: inline-block;
    }

    .navtoggle li:not(:last-child) {
        display: inline-block;
    }

    .navtoggle li:last-child {
        display:none;
    }

    main {
        padding-top: 70px;
    }

    body {
        font-size: 18px;
    }

    h1 {
        font-size: 1.00 em;
    }

    #hero span {
        display: block;
        h1 {
            font-size: 1.00 em;
        }
    }

    #about h2 {
        text-align: center;
    }

   /*  #about container-1 {
        margin-top: 100px;
    } */

    .col-md-6 {
        width: 50%;
    }

    [class*="col-"] { /*why won't about page float left/make side by side columns*/
        float: left;
        padding: 10px;
    }

    .row::after {
        content: "";
        clear: both;
        display: table;
    }

}

@media only screen and (min-width: 1024px) { /* large devices 1024px or larger */
    body {
        font-size: 20px;
    }
    
    .col-lg-5 {
        width: 40%;
    }

    .col-lg-7 {
        width: 60%;
    }

    .container, .container-1 {
        max-width: 1200px;
        margin-left: auto;
        margin-right: auto;
    }

    h1{
        font-size: 3.00em;
    }
    
    h2{
        font-size: 2.5em;                               
    }
    
    h3{
        font-size: 2.15em;
    }
    
    h4{
        font-size: 1.75em;
    }
}

@media only screen and (min-width: 1440px) { /*XL devices 1440 px or larger*/

}

/* .berlin-illustration { svg class NOT id
    width: 100%;
    max-width: 100%;
    height: auto; } */


.circle-illustration {
    width: 100%;
    max-width: 100%;
    height: auto;
    border-radius: 20px;
}

@keyframes bg-change {
    0% {fill:#fedba7;}
    50%{fill:#a363a5;}
    100% {fill:#6389a5;}
}

.background-1 rect{
    animation: 5s bg-change infinite alternate linear;
}

@keyframes fg-change { 
    0% {fill:#fdbc71;}
    50%{fill:#c0aaff;}
    100% {fill:#aae4ff;}
}

@keyframes circle-move {
    from {transform: translate(0,100px);}
    to {transform: translate(0,700px);}
}

.circle-1 circle{ /* is it possible to have both animations at the same time? color change and movement*/
    animation: 5s fg-change infinite alternate linear, 5s circle-move infinite alternate linear;
}

/*@keyframes color-change {
    0% {fill: #edc655;}
    50% {fill: #fcffad;}
    100% {fill: #f76414;}
  }

  .sun {
    animation: 4s color-change infinite alternate linear; 
    /* duration, name, iteration count, direction, timing function
  

  @keyframes cloud-move {
    from {transform: translate(0,50px);}
    to {transform: translate(200px,50px);}
  }

  .cloud-front {
    animation:15s cloud-move infinite alternate linear;
  }

  @keyframes cloud-move-reverse { 
    from {transform: translate(446px,48px);}
    to {transform: translate(100px,48px);}
  }

  .cloud-back {
    animation: 30s cloud-move-reverse infinite alternate linear;
  }

  /*circle behind*/
  /* only showing in the middle, not over links- taken out for now*/

  div.circlebehind a:before, div.circlebehind a:after 
  {
    position: absolute;
    top: 22px;
    left: 50%;
    width: 50px;
    height: 50px;
    border: 4px solid #0277bd;
    transform: translateX(-50%) translateY(-50%) scale(0.8);
    border-radius: 50%;
    background: transparent;
    content: "";
    opacity: 0;
    transition: all 0.3s;
    z-index: -1;
  }

  div.circlebehind a:after {
    border-width: 2px;
    transition: all 0.4s;
  }

  div.circlebehind a:hover:before {
    opacity: 1;
    transform: translateX(-50%) translateY(-50%) scale(1);
  }

  div.circlebehind a:hover:after {
    opacity: 1;
    transform: translateX(-50%) translateY(-50%) scale(1.3);
  }
